# template:Rakefile {{{1
snippet template:Rakefile
alias   rake
	require 'rake/testtask'

	task default: :test

	Rake::TestTask.new(:test) do |t|
		t.libs << 'test'
		t.libs << 'src'
		t.test_files = FileList['test/**/*_test.rb']
	end

	task :${0:other} do |t|
	end

# rake:task {{{1
snippet rake:task
alias   task
	task :${0:other} do |t|
	end


# template:minitest:spec {{{1
snippet template:minitest:spec
alias   minitest:spec spec
	require 'test_helper'

	describe ${1:ClassName} do
		before do
		end

		describe '${2:function_name}' do
			it '${3:spec}' do
				${0}
				expect(${4:expect}).to eq ${5:actual}
			end
		end
	end

# spec:expect {{{1
snippet spec:expect_to
alias   expect_to
	expect(${1:expect}).to eq ${2:actual}

# spec:let {{{1
snippet spec:let
alias   let
	let(:${1:var}) { ${0:value} }

# spec:context {{{1
snippet spec:context
alias   context
	context '${1:case}' do
		${0}
	end

# spec:subject {{{1
snippet spec:subject
alias   subject
	subject {${1:subject}}

	context '${2:case}' do
		${0}
		it { is_expected.to eq ${3:actual}}
	end

# template:minitest:test {{{1
snippet template:minitest:test
alias   minitest:test test
	require 'test_helper'

	class ${1:ClassName}Test < ActiveSupport::TestCase
		test '${2:description}' do
			${0}
			assert_equal ${3:expect}, ${4:actual}
		end
	end

# test:assert_equal {{{1
snippet test:assert_equal
alias   assert_equal
	assert_equal ${1:expect}, ${2:actual}

# test:assert_true {{{1
snippet test:assert_true
alias   assert_true
	assert ${1:true}


# template:Ruboty::Handler {{{1
snippet template:Ruboty::Handler
alias   ruboty
	class ${1:class_name} < Base
		on(
			/${2:regexp}/i,
			name: '${3:function_name}',
			description: '${4:description}'
		)

		def $3(msg)
			${0}
			msg.reply('')
		end
	end


# template:ActiveRecord:migration {{{1
snippet template:ActiveRecord:migration
abbr    template for migration script
	class ${1:ClassName} < ActiveRecord::Migration[5.0]
		def change
			create_table :${2:table_name} do |t|
				t.${3:string} :${4:column_name}
				${0}
				t.timestamps
			end
			add_index :$2, :${5:column_name}
		end
	end

# class:ActiveRecord {{{1
snippet class:ActiveRecord
	class ${1:ClassName} < ActiveRecord::Base
		belongs_to :${2:table_name}
	end


# require:cur_dir {{{1
snippet require:cur_dir
abbr    require ./**/*.rb
	# require ./${1:path}/**/*.rb
	Dir[File.expand_path('$1', __dir__) << '/**/*.rb'].each { |file| require file }
	${0}

# require:active_support {{{1
snippet require:active_support
	require 'active_support'
	require 'active_support/core_ext'


# pry {{{1
snippet pry
abbr    binding.pry
alias   byebug binding
	require 'pry'; binding.pry${0}


# debug {{{1
snippet debug
abbr    def debug
	def debug(str = '')
		str = ' ' + str if !str.empty?
		puts "#{Time.now.to_s} [DEBUG] #{__FILE__} L#{__LINE__}#{str}" if $DEBUG
	end
	${0}


# begin {{{1
snippet begin
alias   try catch
abbr    begin ... rescue ... end
	begin
		${0}
	rescue => e
	end

